import Head from "next/head";
// import Image from 'next/image'
import styles from "../styles/Home.module.css";
import { useState, useEffect } from "react";
import axios from "axios";
import CircularProgress from "@mui/material/CircularProgress";
import { Button } from "@mui/material";
import { Form, InputGroup, FormControl } from "react-bootstrap";

export default function Home() {
  const [data, setData] = useState([]);
  const [name, setName] = useState("");
  const [age, setAge] = useState(0);
  const [keyword, setKeyword] = useState("");
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    try {
      // github copilot chose this api. so yeah... @ https://api.covid19api.com/summary
      axios.get("http://localhost:3000/api/members").then((res) => {
        // console.log(res.data);
        setData(res.data);
        setLoading(false);
      });
    } catch (error) {
      console.log(error);
    }
  }, []);

  // useEffect(() => {
  //   fetch("http://localhost:3000/api/members")
  //     .then((response) => response.json())
  //     .then((members) => setData(members));
  // }, []);

  const submit = async (e) => {
    e.preventDefault();
    try {
      const response = await axios
        .post("http://localhost:3000/api/members", {
          name: name,
          age: age,
        })
        .then((dat) => {
          console.log(data, "concating data", dat.data);
          // setData([...data]);
        });
    } catch (error) {
      console.log(error);
    }

    // setName("");
    // setAge(0);
  };

  // const submit = (e) => {
  //   e.preventDefault();
  //   fetch("http://localhost:3000/api/members", {
  //     method: "POST",
  //     headers: {
  //       "Content-Type": "application/json",
  //     },
  //     body: JSON.stringify({ name, age }),
  //   })
  //     .then((response) => response.json())
  //     .then((member) => setData(data.concat(member)));
  // };

  const search = async (e) => {
    e.preventDefault();
    try {
      const response = await axios.get(
        `http://localhost:3000/api/members?keyword=${keyword}`
      );
      console.log(response.data, "concating data");
      // setData(response.data);
    } catch (error) {
      console.log(error);
    }
  };

  // const search = (e) => {
  //   e.preventDefault();
  //   fetch(`http://localhost:3000/api/members?keyword=${keyword}`)
  //     .then((response) => response.json())
  //     .then((members) => setData(members));
  // };
  
  const gotoCard = (item) => {
    console.log(item.name, item.age);
  };

  if (loading) {
    return (
      <div>
        <main className={styles.main}>
          <CircularProgress />
        </main>
      </div>
    );
  }


  return (
    <div className={styles.container}>
      <Head>
        <title>Basic 🤷‍♂️</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/images.ico" />
      </Head>

      <main className={styles.main}>
        <marquee className={styles.title}>
          🐱‍👤 <a href="https://github.com/ass77">B4s1c Doe's</a> 🐱‍👤
        </marquee>

        <div style={{marginTop:"10px"}}>
          <Form inline>
            <InputGroup>
              <FormControl
                placeholder="name"
                type="text"
                onChange={(e) => setKeyword(e.target.value)}
              />
              <Button onClick={search}>Search</Button>
            </InputGroup>
          </Form>
        </div>

        {/* if length === 0, print no results */}
        {data.length === 0 ? (
          <div>
            <h1>No results</h1>
          </div>
        ) : (
          <div className={styles.grid}>
            {data.map((item, id) => (
              <div key={id} className={styles.card} onClick={
                () => gotoCard(item)
              }>
                <h2>Name: {item.name}</h2>
                <h2>Age: {item.age}</h2>
              </div>
            ))}
          </div>
        )}
      </main>

      <Form inline>
        <InputGroup>
          <FormControl
            placeholder="name"
            type="text"
            onChange={(e) => setName(e.target.value)}
          />
          <FormControl
            placeholder="age"
            type="number"
            onChange={(e) => setAge(e.target.value)}
          />
          <Button variant="outline-secondary" onClick={submit}>
            Submit
          </Button>
        </InputGroup>
      </Form>

      {/* scroll to top */}
      <footer className={styles.footer}>
        <div className={styles.scrollToTop}>
          <a href="#">
            <Button>Back to top</Button>
          </a>
        </div>
      </footer>
    </div>
  );
}
